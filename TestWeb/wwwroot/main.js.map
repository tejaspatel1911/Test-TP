{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/shared/Global.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Test Application';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductService } from './services/product.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,  \r\n    ProductComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([    \r\n      { path: 'product', component: ProductComponent, data: { title: 'Product List' } },\r\n    ])\r\n  ],\r\n  providers: [ProductService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n  <nav class='navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3'>\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]='[\\\"/\\\"]'>TestWeb</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\" [ngClass]='{\\\"show\\\": isExpanded}'>\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/product\\\"]'>Product data</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","module.exports = \".products {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 35em;\\r\\n}\\r\\n  .products table {\\r\\n    position: relative;\\r\\n    cursor: pointer;\\r\\n    background-color: #EEE;\\r\\n    margin: .5em;\\r\\n    padding: .3em 0;\\r\\n    height: 1.6em;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  .products .badge {\\r\\n    display: inline-block;\\r\\n    font-size: small;\\r\\n    color: white;\\r\\n    padding: 0.8em 0.7em 0 0.7em;\\r\\n    background-color: #607D8B;\\r\\n    line-height: 1em;\\r\\n    position: relative;\\r\\n    left: -1px;\\r\\n    top: -4px;\\r\\n    height: 1.8em;\\r\\n    min-width: 16px;\\r\\n    text-align: right;\\r\\n    margin-right: .8em;\\r\\n    border-radius: 4px 0 0 4px;\\r\\n  }\\r\\n\"","module.exports = \"<h2>Product List</h2>\\r\\n\\r\\n<p *ngIf=\\\"!products\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table id =\\\"product\\\" class='table table-striped products' *ngIf=\\\"products\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>#</th>\\r\\n      <th >Product Name</th>\\r\\n      <th>Model Code</th>\\r\\n      <th>Serial Number</th>     \\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let product of products; let i=index;\\\">\\r\\n      <td>{{i+1}}</td>\\r\\n      <td>{{product.productName }}</td>\\r\\n      <td>{{product.modelCode }}</td>\\r\\n      <td>{{product.serialNumber}}</td>      \\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../services/product.service';\nimport { IProduct } from '../model/product';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  products: any = [];  \n  constructor(private _productService: ProductService) {\n    this.loadProducts();\n  }\n\n  ngOnInit() {\n    //this.loadProducts();\n  }\n\n  //loadProducts(): {\n  //  this.products = [];\n  //  this._productService.getAllProduct()\n  //    .subscribe(result => {\n  //      console.log(result);\r\n  //      this.products = result;       \n  //    }, error => console.error(error));\n  //}\n   loadProducts() {\n    this.products = [];\n    this._productService.getAllProduct()\n      .subscribe(result => {\n        console.log(result);\r\n        this.products = result;       \n      }, error => console.error(error));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { IProduct } from '../model/product';\nimport { Global } from '../shared/Global';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/xml'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private productUrl = Global.BASE_USER_ENDPOINT + '/v1/products';\n  constructor(private http: HttpClient) { }\n\n  // get all product data\n  getAllProduct(): Observable<IProduct[]> {\n    return this.http.get<IProduct[]>(this.productUrl)\n      .pipe(       \n        catchError(this.handleError)\n    );\n  }\n\n  // custom handler\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        'Backend returned code ${error.status}, ' +\n        'body was: ${error.error}');\n    }   \n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","export class Global {\r\n  public static BASE_USER_ENDPOINT = 'http://localhost:50324';\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}